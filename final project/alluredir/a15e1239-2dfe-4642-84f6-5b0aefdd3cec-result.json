{"name": "Негативный тест регистрации: несколько ошибок", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'email': ['...must match']}\" == 'Incorrect em...ds must match'\n  + {'email': ['Incorrect email length', 'Invalid email address'], 'password': ['Passwords must match']}\n  - Incorrect email length\n  - Passwords must match", "trace": "self = <test_ui.TestUI object at 0x10aa437d0>\nreg = (<ui.pages.reg_page.RegPage object at 0x10aad5990>, '1590591849.96865')\ndata = (0, ('1590591704.51302', '22', '1', '22'))\n\n    @screenshot_on_failure\n    @allure.story('Регистрация')\n    @allure.title('Негативный тест регистрации: несколько ошибок')\n    @pytest.mark.parametrize('data',\n                             enumerate([(str(time())[:16], '22', '1', '22'), (str(time())[:16], '22@22', '1', '22'),\n                                        (str(time()), '22@22.22', '1', '22')]))\n    def test_reg_negative_multiple_errors(self, reg, data):\n        \"\"\"\n        Тестируется форма регистрации.\n        Ввод данных с занятой почтой\n        Шаги:\n        1. Происходит переход на страницу регистрации.\n        2. Вводятся данные с различными ошибками.\n        3. Нажимается кнопка регистрации.\n        Ожидается, что будут выведены все сообщения об ошибках в привычном виде.\n        Проверка по сообщению.\n        \"\"\"\n        reg_page, username = reg\n        reg_page.register(*data[1])\n    \n        elem = reg_page.find(reg_page.locators.REG_ERROR)\n        while elem.text == '':\n            elem = reg_page.find(reg_page.locators.REG_ERROR)\n    \n        if data[0] == 0:\n>           assert elem.text == \"Incorrect email length\\nPasswords must match\"\nE           assert \"{'email': ['...must match']}\" == 'Incorrect em...ds must match'\nE             + {'email': ['Incorrect email length', 'Invalid email address'], 'password': ['Passwords must match']}\nE             - Incorrect email length\nE             - Passwords must match\n\ndata       = (0, ('1590591704.51302', '22', '1', '22'))\nelem       = <selenium.webdriver.remote.webelement.WebElement (session=\"c479caba9668e3425748d54ef0198bbf\", element=\"de7699bf-7c80-4cab-a79e-f97bd2b3c7fe\")>\nreg        = (<ui.pages.reg_page.RegPage object at 0x10aad5990>, '1590591849.96865')\nreg_page   = <ui.pages.reg_page.RegPage object at 0x10aad5990>\nself       = <test_ui.TestUI object at 0x10aa437d0>\nusername   = '1590591849.96865'\n\ntests/test_ui.py:695: AssertionError"}, "description": "\n        Тестируется форма регистрации.\n        Ввод данных с занятой почтой\n        Шаги:\n        1. Происходит переход на страницу регистрации.\n        2. Вводятся данные с различными ошибками.\n        3. Нажимается кнопка регистрации.\n        Ожидается, что будут выведены все сообщения об ошибках в привычном виде.\n        Проверка по сообщению.\n        ", "attachments": [{"name": "Screenshot", "source": "6c0f268b-d68b-4e82-b700-dfbfeac93b21-attachment.png", "type": "image/png"}, {"name": "log", "source": "85b8a3f9-2592-49ab-8783-4d1d28395414-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "(0, ('1590591704.51302', '22', '1', '22'))"}], "start": 1590591849970, "stop": 1590591853417, "uuid": "5dcb5300-9baa-4397-8e59-86392cfc354c", "historyId": "766d7ef1b9769c3dab7ac679a828e403", "testCaseId": "11263d713743424faa79269faab4fe41", "fullName": "tests.test_ui.TestUI#test_reg_negative_multiple_errors", "labels": [{"name": "story", "value": "Регистрация"}, {"name": "feature", "value": "UI"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "MacBook-Pro-Lev.local"}, {"name": "thread", "value": "46107-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}