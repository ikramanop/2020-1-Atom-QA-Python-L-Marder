{"name": "Негативный тест регистрации: несколько ошибок", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"{'username':...must match']}\" == 'Incorrect us...ds must match'\n  + {'username': ['Incorrect username length'], 'email': ['Invalid email address'], 'password': ['Passwords must match']}\n  - Incorrect username length\n  - Passwords must match", "trace": "self = <test_ui.TestUI object at 0x10aa31150>\nreg = (<ui.pages.reg_page.RegPage object at 0x10a979a50>, '1590591858.08476')\ndata = (2, ('1590591704.513032', '22@22.22', '1', '22'))\n\n    @screenshot_on_failure\n    @allure.story('Регистрация')\n    @allure.title('Негативный тест регистрации: несколько ошибок')\n    @pytest.mark.parametrize('data',\n                             enumerate([(str(time())[:16], '22', '1', '22'), (str(time())[:16], '22@22', '1', '22'),\n                                        (str(time()), '22@22.22', '1', '22')]))\n    def test_reg_negative_multiple_errors(self, reg, data):\n        \"\"\"\n        Тестируется форма регистрации.\n        Ввод данных с занятой почтой\n        Шаги:\n        1. Происходит переход на страницу регистрации.\n        2. Вводятся данные с различными ошибками.\n        3. Нажимается кнопка регистрации.\n        Ожидается, что будут выведены все сообщения об ошибках в привычном виде.\n        Проверка по сообщению.\n        \"\"\"\n        reg_page, username = reg\n        reg_page.register(*data[1])\n    \n        elem = reg_page.find(reg_page.locators.REG_ERROR)\n        while elem.text == '':\n            elem = reg_page.find(reg_page.locators.REG_ERROR)\n    \n        if data[0] == 0:\n            assert elem.text == \"Incorrect email length\\nPasswords must match\"\n        if data[0] == 1:\n            assert elem.text == \"Invalid email address\\nPasswords must match\"\n        if data[0] == 2:\n>           assert elem.text == \"Incorrect username length\\nPasswords must match\"\nE           assert \"{'username':...must match']}\" == 'Incorrect us...ds must match'\nE             + {'username': ['Incorrect username length'], 'email': ['Invalid email address'], 'password': ['Passwords must match']}\nE             - Incorrect username length\nE             - Passwords must match\n\ndata       = (2, ('1590591704.513032', '22@22.22', '1', '22'))\nelem       = <selenium.webdriver.remote.webelement.WebElement (session=\"32113d0509eb0bd8b32b6acac82356d3\", element=\"a449edd0-3635-48fc-86fa-a69abc0c2c25\")>\nreg        = (<ui.pages.reg_page.RegPage object at 0x10a979a50>, '1590591858.08476')\nreg_page   = <ui.pages.reg_page.RegPage object at 0x10a979a50>\nself       = <test_ui.TestUI object at 0x10aa31150>\nusername   = '1590591858.08476'\n\ntests/test_ui.py:699: AssertionError"}, "description": "\n        Тестируется форма регистрации.\n        Ввод данных с занятой почтой\n        Шаги:\n        1. Происходит переход на страницу регистрации.\n        2. Вводятся данные с различными ошибками.\n        3. Нажимается кнопка регистрации.\n        Ожидается, что будут выведены все сообщения об ошибках в привычном виде.\n        Проверка по сообщению.\n        ", "attachments": [{"name": "Screenshot", "source": "c78177cf-3ee6-4ba7-bf8a-cb20045b61da-attachment.png", "type": "image/png"}, {"name": "log", "source": "23753b3b-c901-4f33-9e32-045e697d0519-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "(2, ('1590591704.513032', '22@22.22', '1', '22'))"}], "start": 1590591858086, "stop": 1590591861562, "uuid": "220578fd-b8e6-4df0-84f4-84d59c0c1e48", "historyId": "fec49413b7efcfa19112508bcdefe00a", "testCaseId": "11263d713743424faa79269faab4fe41", "fullName": "tests.test_ui.TestUI#test_reg_negative_multiple_errors", "labels": [{"name": "story", "value": "Регистрация"}, {"name": "feature", "value": "UI"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "subSuite", "value": "TestUI"}, {"name": "host", "value": "MacBook-Pro-Lev.local"}, {"name": "thread", "value": "46107-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}]}