{"name": "Тест логаута после регистрации", "status": "failed", "statusDetails": {"message": "AssertionError: assert None is not None\n +  where None = 20 1590591717.51678 1590591717.51678@jj.ek 1 0 None.start_active_time\n +    where 20 1590591717.51678 1590591717.51678@jj.ek 1 0 None = <bound method MySQLConnector.get_user of <db.connector.connector.MySQLConnector object at 0x106a05a10>>('1590591717.51678')\n +      where <bound method MySQLConnector.get_user of <db.connector.connector.MySQLConnector object at 0x106a05a10>> = <db.connector.connector.MySQLConnector object at 0x106a05a10>.get_user\n +        where <db.connector.connector.MySQLConnector object at 0x106a05a10> = <test_api_db.TestDBUI object at 0x10770b250>.connection", "trace": "self = <test_api_db.TestDBUI object at 0x10770b250>\nreg_api = ('1590591717.51678', <requests.sessions.Session object at 0x1076bde50>)\n\n    @allure.story('Регистрация')\n    @allure.title('Тест логаута после регистрации')\n    def test_reg_api_logout(self, reg_api):\n        \"\"\"\n        Тестируется регистрация пользователя через API.\n        Шаги:\n        1. Происходит регистрация через API.\n        2. Происходит логаут через API.\n        Ожидается, что проставится active = 0 и будет информация о времени входа.\n        \"\"\"\n        username, session = reg_api\n        session.get(url='http://127.0.0.1:8082' + '/logout')\n        assert self.connection.get_user(username).active == 0\n>       assert self.connection.get_user(username).start_active_time is not None\nE       AssertionError: assert None is not None\nE        +  where None = 20 1590591717.51678 1590591717.51678@jj.ek 1 0 None.start_active_time\nE        +    where 20 1590591717.51678 1590591717.51678@jj.ek 1 0 None = <bound method MySQLConnector.get_user of <db.connector.connector.MySQLConnector object at 0x106a05a10>>('1590591717.51678')\nE        +      where <bound method MySQLConnector.get_user of <db.connector.connector.MySQLConnector object at 0x106a05a10>> = <db.connector.connector.MySQLConnector object at 0x106a05a10>.get_user\nE        +        where <db.connector.connector.MySQLConnector object at 0x106a05a10> = <test_api_db.TestDBUI object at 0x10770b250>.connection\n\nreg_api    = ('1590591717.51678', <requests.sessions.Session object at 0x1076bde50>)\nself       = <test_api_db.TestDBUI object at 0x10770b250>\nsession    = <requests.sessions.Session object at 0x1076bde50>\nusername   = '1590591717.51678'\n\ntests/test_api_db.py:320: AssertionError"}, "description": "\n        Тестируется регистрация пользователя через API.\n        Шаги:\n        1. Происходит регистрация через API.\n        2. Происходит логаут через API.\n        Ожидается, что проставится active = 0 и будет информация о времени входа.\n        ", "attachments": [{"name": "log", "source": "fd7de378-778d-4333-b401-4f0fe8e53a0a-attachment.txt", "type": "text/plain"}], "start": 1590591718298, "stop": 1590591719102, "uuid": "e17f911e-3172-42ae-a8d8-9eacdde9b57f", "historyId": "41e0ee7ab8fd23ea811028a076dcd6d1", "testCaseId": "271b49555a28699458078e7df0fd7c62", "fullName": "tests.test_api_db.TestDBUI#test_reg_api_logout", "labels": [{"name": "story", "value": "Регистрация"}, {"name": "feature", "value": "API_DB"}, {"name": "tag", "value": "API_DB"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api_db"}, {"name": "subSuite", "value": "TestDBUI"}, {"name": "host", "value": "MacBook-Pro-Lev.local"}, {"name": "thread", "value": "46106-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api_db"}]}